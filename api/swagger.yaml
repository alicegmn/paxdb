---
openapi: 3.0.0
info:
  title: Pax API
  version: 1.0.0
  description: Dokumentation för PAX rumsbokningssystem
servers:
  - url: https://paxdb.vercel.app/
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRegisterInput"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSuccessResponse"
        "400":
          description: Invalid role
        "409":
          description: Username already taken
        "500":
          description: Registration failed
  /auth/login:
    post:
      summary: Authenticate user and return JWT
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthLoginInput"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSuccessResponse"
        "401":
          description: Invalid login credentials
        "500":
          description: Login failed

  /dashboard:
    get:
      summary: Access the admin dashboard
      description: Requires a valid JWT token with the `admin` role.
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Welcome message and user info
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Welcome to the admin dashboard
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      role:
                        type: string
        "401":
          description: Unauthorized (missing or invalid token)
        "403":
          description: Forbidden (not an admin)
  /rooms:
    get:
      summary: Get all rooms
      tags: [Rooms]
      responses:
        "200":
          description: A list of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
              example:
                - id: 1
                  name: Rum Alfa
                  description: Litet mötesrum med whiteboard
                  available: true
                  air_quality: Bra
                  screen: false
                  floor: 1
                  chairs: 4
                  whiteboard: true
                  projector: false
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 22.0
                  activity: false
                  time: "2025-05-21T09:00:00Z"
                - id: 2
                  name: Rum Bravo
                  description: Konferensrum med stor skärm
                  available: false
                  air_quality: Okej
                  screen: true
                  floor: 2
                  chairs: 10
                  whiteboard: false
                  projector: true
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 21.5
                  activity: true
                  time: "2025-05-21T10:15:00Z"
                - id: 3
                  name: Rum Hej
                  description: Konferensrum med skärm
                  available: false
                  air_quality: Okej
                  screen: true
                  floor: 2
                  chairs: 10
                  whiteboard: false
                  projector: true
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 23.0
                  activity: true
                  time: "2025-05-21T10:30:00Z"
                - id: 4
                  name: Rum Charlie
                  description: Mindre mötesrum för snabba avstämningar
                  available: true
                  air_quality: Bra
                  screen: false
                  floor: 1
                  chairs: 4
                  whiteboard: true
                  projector: false
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 21.0
                  activity: false
                  time: "2025-05-21T09:45:00Z"
                - id: 5
                  name: Rum Delta
                  description: Tyst rum för enskilt arbete
                  available: true
                  air_quality: Okej
                  screen: false
                  floor: 3
                  chairs: 1
                  whiteboard: false
                  projector: false
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 20.0
                  activity: false
                  time: "2025-05-21T08:30:00Z"
                - id: 6
                  name: Rum Echo
                  description: Konferensrum med videokonferensutrustning
                  available: false
                  air_quality: Dålig
                  screen: true
                  floor: 2
                  chairs: 12
                  whiteboard: true
                  projector: true
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 24.5
                  activity: true
                  time: "2025-05-21T10:45:00Z"
                - id: 7
                  name: Rum Foxtrot
                  description: Grupparbetsrum med whiteboardvägg
                  available: true
                  air_quality: Bra
                  screen: true
                  floor: 1
                  chairs: 6
                  whiteboard: true
                  projector: false
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 22.2
                  activity: false
                  time: "2025-05-21T09:15:00Z"
                - id: 8
                  name: Rum Golf
                  description: Stort mötesrum för workshops
                  available: false
                  air_quality: Okej
                  screen: true
                  floor: 3
                  chairs: 15
                  whiteboard: true
                  projector: true
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 23.3
                  activity: true
                  time: "2025-05-21T11:00:00Z"
                - id: 9
                  name: Rum Hotel
                  description: Kreativt rum med färgglada väggar och beanbags
                  available: true
                  air_quality: Bra
                  screen: false
                  floor: 1
                  chairs: 5
                  whiteboard: true
                  projector: false
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 21.7
                  activity: false
                  time: "2025-05-21T09:20:00Z"
                - id: 10
                  name: Rum India
                  description: Standardmötesrum med fönster mot innergården
                  available: false
                  air_quality: Okej
                  screen: true
                  floor: 2
                  chairs: 8
                  whiteboard: false
                  projector: true
                  img: https://images.unsplash.com/photo-1462826303086-329426d1aef5?q=80&w=2670&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D
                  temperature: 22.4
                  activity: true
                  time: "2025-05-21T10:05:00Z"

    post:
      summary: Create a new room
      tags: [Rooms]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomInput"
      responses:
        "201":
          description: Room created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
  /rooms/{id}:
    get:
      summary: Get a room by ID
      tags: [Rooms]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Room found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "404":
          description: Room not found
    put:
      summary: Update a room
      tags: [Rooms]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomInput"
      responses:
        "200":
          description: Room updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "404":
          description: Room not found
    delete:
      summary: Delete a room
      tags: [Rooms]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Room deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  room:
                    $ref: "#/components/schemas/Room"
        "404":
          description: Room not found
  /users:
    get:
      summary: Get all users
      tags: [Users]
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
              example:
                - id: 1
                  firstname: Alice
                  lastname: Eriksson
                  email: alice@example.com
                  role: admin
                - id: 2
                  firstname: Bob
                  lastname: Svensson
                  email: bob@example.com
                  role: admin
                - id: 3
                  firstname: Clara
                  lastname: Lindqvist
                  email: clara@example.com
                  role: user
                - id: 4
                  firstname: David
                  lastname: Karlsson
                  email: david@example.com
                  role: user
                - id: 5
                  firstname: Elin
                  lastname: Holm
                  email: elin@example.com
                  role: user
                - id: 6
                  firstname: Filip
                  lastname: Berg
                  email: filip@example.com
                  role: user
                - id: 7
                  firstname: Gabriella
                  lastname: Åström
                  email: gabriella@example.com
                  role: admin
                - id: 8
                  firstname: Henrik
                  lastname: Dahl
                  email: henrik@example.com
                  role: user
                - id: 9
                  firstname: Ida
                  lastname: Lundgren
                  email: ida@example.com
                  role: user
                - id: 10
                  firstname: Johan
                  lastname: Eklund
                  email: johan@example.com
                  role: user
                - id: 11
                  firstname: Karin
                  lastname: Nyberg
                  email: karin@example.com
                  role: admin
                - id: 12
                  firstname: Leo
                  lastname: Blomqvist
                  email: leo@example.com
                  role: user
                - id: 13
                  firstname: Maria
                  lastname: Sandberg
                  email: maria@example.com
                  role: user
                - id: 14
                  firstname: Niklas
                  lastname: Hellström
                  email: niklas@example.com
                  role: user
                - id: 15
                  firstname: Olivia
                  lastname: Jansson
                  email: olivia@example.com
                  role: user
                - id: 16
                  firstname: Patrik
                  lastname: Holmgren
                  email: patrik@example.com
                  role: admin
                - id: 17
                  firstname: Qasim
                  lastname: Noor
                  email: qasim@example.com
                  role: user
                - id: 18
                  firstname: Rebecca
                  lastname: Månsson
                  email: rebecca@example.com
                  role: user
                - id: 19
                  firstname: Simon
                  lastname: Olofsson
                  email: simon@example.com
                  role: user
                - id: 20
                  firstname: Tove
                  lastname: Håkansson
                  email: tove@example.com
                  role: user
                - id: 21
                  firstname: Ulf
                  lastname: Bergström
                  email: ulf@example.com
                  role: admin
                - id: 22
                  firstname: Victoria
                  lastname: Edlund
                  email: victoria@example.com
                  role: user
                - id: 23
                  firstname: William
                  lastname: Åkesson
                  email: william@example.com
                  role: user
    post:
      summary: Create a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserInput"
      responses:
        "201":
          description: User created successfully
  /users/{id}:
    get:
      summary: Get a user by ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    put:
      summary: Update a user
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found
    delete:
      summary: Delete a user
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "404":
          description: User not found
  /bookings:
    get:
      summary: Get all bookings with room name and user email
      tags: [Bookings]
      responses:
        "200":
          description: A list of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookingWithRelations"
              example:
                - id: 1
                  room_id: 5
                  user_id: 12
                  date: 2026-03-10T10:00:00Z
                  duration_minutes: 60

                - id: 2
                  room_id: 8
                  user_id: 16
                  date: 2026-04-22T13:30:00Z
                  duration_minutes: 90

                - id: 3
                  room_id: 13
                  user_id: 5
                  date: 2026-05-15T09:00:00Z
                  duration_minutes: 45

                - id: 4
                  room_id: 10
                  user_id: 22
                  date: 2026-06-01T14:00:00Z
                  duration_minutes: 120

                - id: 5
                  room_id: 3
                  user_id: 1
                  date: 2026-07-18T08:00:00Z
                  duration_minutes: 60

                - id: 6
                  room_id: 14
                  user_id: 9
                  date: 2026-08-03T16:00:00Z
                  duration_minutes: 30

                - id: 7
                  room_id: 15
                  user_id: 18
                  date: 2026-09-09T11:00:00Z
                  duration_minutes: 90

                - id: 8
                  room_id: 6
                  user_id: 3
                  date: 2026-10-20T15:00:00Z
                  duration_minutes: 60

                - id: 9
                  room_id: 12
                  user_id: 20
                  date: 2026-11-05T09:30:00Z
                  duration_minutes: 45

                - id: 10
                  room_id: 16
                  user_id: 4
                  date: 2026-12-12T13:00:00Z
                  duration_minutes: 120
        "500":
          description: Internal server error
    post:
      summary: Create a new booking
      tags: [Bookings]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
      responses:
        "201":
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Invalid room_id or user_id
        "500":
          description: Internal server error
  /bookings/{id}:
    get:
      summary: Get a booking by ID
      tags: [Bookings]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Booking found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "404":
          description: Booking not found
    put:
      summary: Update a booking by ID
      tags: [Bookings]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Booking"
      responses:
        "200":
          description: Booking updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Invalid room_id or user_id
        "404":
          description: Booking not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a booking by ID
      tags: [Bookings]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Booking deleted successfully
        "404":
          description: Booking not found
        "500":
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Room:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        available:
          type: boolean
        air_quality:
          type: number
        screen:
          type: boolean
        floor:
          type: integer
        chairs:
          type: integer
        whiteboard:
          type: boolean
        projector:
          type: boolean
        temperature:
          type: number
        activity:
          type: boolean
        time:
          type: string
        img:
          type: string
    CreateRoomInput:
      type: object
      required:
        - name
        - description
        - available
        - air_quality
        - screen
        - floor
        - chairs
        - whiteboard
        - projector
        - temperature
        - activity
        - time
        - img
      properties:
        name:
          type: string
        description:
          type: string
        available:
          type: boolean
        air_quality:
          type: number
        screen:
          type: boolean
        floor:
          type: integer
        chairs:
          type: integer
        whiteboard:
          type: boolean
        projector:
          type: boolean
        temperature:
          type: number
        activity:
          type: boolean
        time:
          type: string
        img:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        role:
          type: string
    CreateUserInput:
      type: object
      required:
        - firstname
        - lastname
        - email
        - password
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
    Booking:
      type: object
      properties:
        id:
          type: integer
        room_id:
          type: integer
        user_id:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
    BookingWithRelations:
      type: object
      properties:
        id:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        room_name:
          type: string
        user_email:
          type: string
    AuthRegisterInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - admin
            - user
            - moderator

    AuthLoginInput:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    AuthSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: Login successful
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            id:
              type: integer
            username:
              type: string
            role:
              type: string
